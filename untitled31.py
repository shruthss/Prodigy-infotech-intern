# -*- coding: utf-8 -*-
"""Untitled31.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15MXX-lx5qQpSn3EWmagJmIW3DSQlTS8v
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score
from sklearn.cluster import KMeans
from matplotlib import pyplot

from google.colab import drive
drive.mount('/content/drive')

# Load dataset
df = pd.read_csv("/content/kmeans dataset.csv")
df.head()

df

df.isnull().sum()

display("duplicated:",df.duplicated().sum())

# Check the number of columns in the DataFrame
num_columns = len(df.columns)

# Select columns within the valid range
X = df.iloc[:, [i for i in [3, 4] if i < num_columns]].values

from sklearn.cluster import KMeans

print(X.shape)

import matplotlib.pyplot as plt

# Define wcss with the same length as the range of integers from 1 to 10
wcss = [0] * 10

# Plot the data
plt.plot(range(1, 11), wcss)

print(X.shape)

!pip install matplotlib-venn

!apt-get -qq install -y libfluidsynth1

# https://pypi.python.org/pypi/pydot
!apt-get -qq install -y graphviz && pip install pydot
import pydot

!pip install cartopy
import cartopy

# Assuming you're using K-means clustering and have imported necessary libraries
from sklearn.cluster import KMeans
import numpy as np

# Generate some sample data
X = np.array([[1, 2], [1, 4], [1, 0],
              [10, 2], [10, 4], [10, 0]])

# Define the number of clusters
k = 2

# Initialize KMeans
kmeans = KMeans(n_clusters=k)

# Fit KMeans to the data
kmeans.fit(X)

# Get the cluster labels
y_means = kmeans.labels_

# Now 'y_means' is defined and you can use it further in your code
print(y_means)

plt.scatter(X[y_means == 0,0],X[y_means == 0,1],color='blue')
plt.scatter(X[y_means == 1,0],X[y_means == 1,1],color='red')
plt.scatter(X[y_means == 2,0],X[y_means == 2,1],color='green')
plt.scatter(X[y_means == 3,0],X[y_means == 3,1],color='yellow')
plt.scatter(X[y_means == 4,0],X[y_means == 4,1],color='black')
plt.title('Clusters of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.show()

import pandas as pd

# Assuming you have a CSV file named 'data.csv' in the same directory as your script
# You can use pd.read_csv() function to import the data
data = pd.read_csv('/content/kmeans dataset.csv')

# Now you can work with the 'data' DataFrame
print(data.head())  # Display the first few rows of the DataFrame

